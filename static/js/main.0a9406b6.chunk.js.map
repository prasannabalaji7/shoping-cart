{"version":3,"sources":["components/navBar.tsx","components/home.tsx","components/checkout.tsx","reducers/rootReducer.ts","components/myOrders.tsx","components/myCart.tsx","App.tsx","constants/constants.ts","rootSaga.ts","index.tsx"],"names":["removeLink","textDecoration","color","Navbar","myCart","useSelector","state","length","count","className","style","to","Home","dispatch","useDispatch","useEffect","type","payload","start","end","itemList","books","map","item","key","isbn","src","thumbnailUrl","alt","title","description","split","Checkout","match","bookData","filteredBook","filter","params","bookId","isBookAvail","handleAddToCart","e","id","parseInt","price","author","error","pages","onClick","initialState","publisher","orderedOn","status","userBooks","MyOrders","Books","MyCart","useState","disabled","setDisabled","userData","deleteRecord","target","value","totalPayable","itemCost","taxable","shipping","total","trList","itemPrice","parseFloat","reduce","prev","curr","defaultValue","address","onChange","data","toFixed","App","exact","path","component","React","Component","apiJson","fetchBooks","fetchUsersBooks","addToMyCart","fetchMyCart","fetchAddress","updateAddres","deleteBook","getBooks","getUsersBooks","getMyCart","getAddress","updateAddress","addToCart","deleteBooks","rootSaga","postObj","call","fetch","then","res","json","put","message","usersBooks","method","headers","Accept","body","JSON","stringify","response","action","takeEvery","takeLatest","all","sagaMiddleware","createSagaMiddleware","store","createStore","loading","applyMiddleware","logger","run","ReactDOM","render","document","getElementById"],"mappings":"4SAGMA,EAAa,CAAEC,eAAgB,OAAQC,MAAO,SAyBrCC,EAtBA,WAEX,IAGIC,EAHkBC,aAAY,SAACC,GAC/B,OAAOA,KAEWF,OAAOG,OACzBC,EAAQJ,EAAS,EAAT,WAAiBA,EAAjB,KAA6B,GAEzC,OACI,yBAAKK,UAAU,eACX,kBAAC,IAAD,CAAMC,MAAOV,EAAYW,GAAG,IAAIF,UAAU,cAA1C,cACA,wBAAIA,UAAU,SACV,4BAAI,kBAAC,IAAD,CAAMC,MAAOV,EAAYW,GAAG,KAA5B,WACJ,4BAAI,kBAAC,IAAD,CAAMD,MAAOV,EAAYW,GAAG,aAA5B,gBACJ,4BAAI,kBAAC,IAAD,CAAMD,MAAOV,EAAYW,GAAG,WAA5B,WAA+CH,OCdtDI,EAAO,WAChB,IAAMC,EAASC,cACfC,qBAAU,WACNF,EAAS,CAACG,KAAM,YAAYC,QAAQ,CAACC,MAAM,EAAEC,IAAI,QACnD,IAEF,IAGIC,EAHoBf,aAAY,SAACC,GAClC,OAAOA,KAEce,MAAMC,KAAI,SAACC,GAC/B,OACI,yBAAKd,UAAU,OAAOe,IAAKD,EAAKE,MAC5B,yBAAKC,IAAKH,EAAKI,aAAcC,IAAI,UACjC,6BACI,gCAAML,EAAKM,OACX,uBAAGpB,UAAU,YAAYc,EAAKO,YAAYC,MAAM,KAAK,KAEzD,kBAAC,IAAD,CAAMpB,GAAI,YAAcY,EAAKE,MACzB,4BAAQhB,UAAU,iBAAlB,mBAKhB,OACI,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACVW,KCvBJY,EAA+B,SAAC,GAAW,IAAVC,EAAS,EAATA,MACpCpB,EAAWC,cACXoB,EAAkB7B,aAAY,SAACC,GAClC,OAAOA,KACJ6B,EAAeD,EAASb,MAAMe,QAAO,SAACb,GAAD,OAAsBA,EAAKE,MAAMQ,EAAMI,OAAOC,UACnFC,EAAqBJ,EAAa5B,OACjCiC,EAAgB,SAACC,GACpB5B,EAAS,CAACG,KAAK,cAAeC,QAAU,CAACyB,GAAGC,SAASR,EAAa,GAAGV,MAAMmB,MAAMT,EAAa,GAAGS,MAAMf,MAAMM,EAAa,GAAGN,MAAMgB,OAAOV,EAAa,GAAGU,UAC1JhC,EAAS,CAACG,KAAK,iBAGnB,OACIkB,EAASY,MACL,yBAAKrC,UAAU,YAAf,iCAEJ8B,EACC,yBAAK9B,UAAU,YACZ,yBAAKiB,IAAKS,EAAa,GAAGR,aAAcC,IAAI,SAC5C,yBAAKnB,UAAU,eACX,4BAAK0B,EAAa,GAAGN,OACrB,yCAAeM,EAAa,GAAGS,OAC/B,wCAAcT,EAAa,GAAGU,QAC9B,uCAAaV,EAAa,GAAGY,OAC7B,sCAAYZ,EAAa,GAAGV,MAC5B,yBAAKhB,UAAU,gBACX,4BAAQA,UAAU,gBAAiBuC,QAASR,GAA5C,eACA,kBAAC,IAAD,CAAM7B,GAAG,WACT,4BAAQF,UAAU,gBAAgBuC,QAASR,GAA3C,cAKR,kCACKL,EAAa,GAAGL,cAKtB,yBAAKrB,UAAU,YAAf,kC,OClBEwC,EAAe,CACxB5B,MAAO,CAAC,CACJI,KAAM,GACNI,MAAO,GACPF,aAAc,GACdkB,OAAQ,GACRK,UAAW,GACXC,UAAW,GACXC,OAAQ,GACRR,MAAO,EACPG,MAAO,EACPjB,YAAa,KAEjBuB,UAAW,GACXjD,OAAQ,CAAC,CACLsC,GAAI,GACJE,MAAO,EACPf,MAAO,GACPgB,OAAQ,KAEZC,MAAO,IC7CEQ,EAAW,WACpB,IAAMzC,EAAWC,cACjBC,qBAAU,WACNF,EAAS,CAAEG,KAAM,sBAClB,IACH,IAAII,EAAgB6B,EAAa5B,MAAM,GAIjCkC,EAHmBlD,aAAY,SAACC,GAClC,OAAOA,KAEY+C,UAsBvB,OArBIE,GAASA,EAAMhD,SACfa,EAAWmC,EAAMjC,KAAI,SAACC,GAClB,OACI,yBAAKd,UAAU,eACX,yBAAKA,UAAU,YACX,mDAAyBc,EAAK4B,WAC9B,0CAAgB5B,EAAK6B,SAEzB,yBAAK3C,UAAU,cACX,yBAAKiB,IAAKH,EAAKI,aAAcC,IAAI,SACjC,yBAAKnB,UAAU,eACX,4BAAKc,EAAKM,OACV,wCAAcN,EAAKsB,QACnB,yCAAetB,EAAKqB,cASxC,yBAAKnC,UAAU,aACX,yBAAKA,UAAU,OACVW,EAASb,OAAOa,EAAU,iE,QCjC9BoC,EAAS,WAAO,IAAD,EACQC,oBAAS,GADjB,mBACjBC,EADiB,KACPC,EADO,KAElB9C,EAAWC,cACX8C,EAAgBvD,aAAY,SAACC,GAC/B,OAAOA,KAMXS,qBAAU,WACNF,EAAS,CAAEG,KAAM,gBACjBH,EAAS,CAAEG,KAAM,kBAClB,IAEH,IAIM6C,EAAe,SAACpB,GAClB5B,EAAS,CAAEG,KAAM,cAAeC,QAASwB,EAAEqB,OAAOC,QAClDlD,EAAS,CAAEG,KAAM,iBAMjBgD,EAAe,CACfC,SAAU,EACVC,QAAS,EACTC,SAAU,EACVC,MAAO,GACRC,EAAc,GAEjB,GAAIT,EAASxD,QAAqC,kBAApBwD,EAASxD,QAAuBwD,EAASxD,OAAOG,OAAQ,CAClF,GAA8B,GAA1BqD,EAASxD,OAAOG,OAAa,CAC7B,IAAI+D,EAAYV,EAASxD,OAAO,GAAGwC,OACnCoB,EAAe,CACXC,SAAWM,WAAWD,GACtBJ,QAAuB,GAAZI,EAAmB,IAC9BH,SAAwB,GAAZG,EAAmB,IAC/BF,MAAO,IAEEA,MAAQJ,EAAaC,SAAWD,EAAaE,QAAUF,EAAaG,cAEjFH,EAAeJ,EAASxD,OAAOoE,QAAO,SAACC,EAAWC,GAC9C,IAAIT,EAAWM,WAAWE,EAAK7B,OAAS2B,WAAWG,EAAK9B,OACpDsB,EAA8B,GAAXD,EAAkB,IACrCE,EAA+B,GAAXF,EAAkB,IAE1C,MAAO,CAAEA,SAAUA,EAAUC,QAASA,EAASC,SAAUA,EAAUC,MAD/CH,EAAWC,EAAUC,MAIjDE,EAAST,EAASxD,OAAOkB,KAAI,SAACC,GAC1B,OACI,wBAAIC,IAAKD,EAAKmB,IACV,4BAAKnB,EAAKM,OACV,4BAAKN,EAAKqB,OACV,4BAAI,4BAAQmB,MAAOxC,EAAKmB,GAAIjC,UAAU,gBAAgBuC,QAASa,GAA3D,UAKpB,OACI,yBAAKpD,UAAU,YACX,yBAAKA,UAAU,WACX,iDADJ,IACgC,6BAC5B,8BAAUiD,SAAUA,EAAUiB,aAAa,uBAAuBZ,MAAOH,EAASgB,QAASC,SApDlF,SAACpC,GAClB5B,EAAS,CAAEG,KAAM,iBAAkBC,QAASwB,EAAEqB,OAAOC,WAoD7C,yBAAKtD,UAAU,gBACX,4BAAQA,UAAU,gBAAgBuC,QA/DhC,SAACP,GACf5B,EAAS,CAAEG,KAAM,iBAAkBC,QAAS,CAAEyB,GAAI,EAAGoC,KAAMlB,EAASgB,WACpEjB,GAAY,KA6DA,gBACA,4BAAQlD,UAAU,gBAAgBuC,QA9C5B,SAACP,GACnBkB,GAAaD,KA6CD,iBAGR,6BACA,yBAAKjD,UAAU,eACX,+CAAyB,6BACzB,+BACI,4BACI,qCACA,qCACA,uCAEH4D,GACG,6BACR,+CACA,6BACI,yBAAK5D,UAAU,YAAW,6CAAuB,6BAAMuD,EAAaC,SAASc,QAAQ,KACrF,yBAAKtE,UAAU,YAAW,sCAAgB,6BAAMuD,EAAaE,QAAQa,QAAQ,KAC7E,yBAAKtE,UAAU,YAAW,2CAAqB,6BAAMuD,EAAaG,SAASY,QAAQ,KACnF,6BACA,yBAAKtE,UAAU,YAAW,wCAAkB,6BAAMuD,EAAaI,MAAMW,QAAQ,KAC7E,yBAAKtE,UAAU,gBACf,4BAAQA,UAAU,iBAAlB,YACA,4BAAQA,UAAU,iBAAlB,eCtELuE,E,uKAjBX,OACE,kBAAC,IAAD,KACE,gCACE,kBAAC,EAAD,OAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWvE,IACjC,kBAAC,IAAD,CAAOsE,KAAK,YAAYC,UAAW7B,IACnC,kBAAC,IAAD,CAAO4B,KAAK,oBAAoBC,UAAWnD,IAC3C,kBAAC,IAAD,CAAOkD,KAAK,UAAUC,UAAW3B,U,GAXxB4B,IAAMC,W,uDCTXC,EAAS,sE,WCGbC,G,WAWAC,G,WAWAC,G,WAkBAC,G,WAWAC,G,WAWAC,G,WAkBAC,G,WAaOC,G,WAIAC,I,WAIAC,I,WAIAC,I,WAIAC,I,WAGAC,I,WAIAC,I,WAIQC,IAxHzB,SAAUd,EAAWe,GAArB,uEAEqB,OAFrB,kBAE2BC,aAAK,WACpB,OAAOC,MAAM,GAAD,OAAIlB,EAAJ,wBAA2BgB,EAAQrF,QAAQC,MAA3C,iBAAyDoF,EAAQrF,QAAQE,MAAOsF,MAAK,SAAAC,GAAG,OAAIA,EAAIC,aAHxH,OAKQ,OAHM7B,EAFd,gBAKc8B,YAAI,CAAE5F,KAAM,eAAgBK,MAAOyD,IALjD,8BAOQ,OAPR,mCAOc8B,YAAI,CAAE5F,KAAM,aAAc8B,MAAO,KAAE+D,UAPjD,qDAWA,SAAUrB,IAAV,uEAEqB,OAFrB,kBAE2Be,aAAK,WACpB,OAAOC,MAAMlB,EAAQ,cAAcmB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,aAH/D,OAKQ,OAHM7B,EAFd,gBAKc8B,YAAI,CAAE5F,KAAM,qBAAsB8F,WAAYhC,IAL5D,8BAOQ,OAPR,mCAOc8B,YAAI,CAAE5F,KAAM,aAAc8B,MAAO,KAAE+D,UAPjD,qDAWA,SAAUpB,EAAYa,GAAtB,uEAEqB,OAFrB,kBAE2BC,aAAK,WACpB,OAAOC,MAAMlB,EAAQ,SAAU,CAC3ByB,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUd,EAAQrF,WAC9BwF,MAAK,SAAAC,GAAG,OAAIA,EAAIC,aAV/B,OAYQ,OAVM7B,EAFd,gBAYc8B,YAAI,CAAE5F,KAAM,kBAAmBZ,OAAQ0E,IAZrD,8BAcQ,OAdR,mCAcc8B,YAAI,CAAE5F,KAAM,aAAc8B,MAAO,KAAE+D,UAdjD,qDAkBA,SAAUnB,IAAV,uEAEqB,OAFrB,kBAE2Ba,aAAK,WACpB,OAAOC,MAAMlB,EAAQ,UAAUmB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,aAH3D,OAKQ,OAHM7B,EAFd,gBAKc8B,YAAI,CAAE5F,KAAM,kBAAmBZ,OAAQ0E,IALrD,8BAOQ,OAPR,mCAOc8B,YAAI,CAAE5F,KAAM,aAAc8B,MAAO,KAAE+D,UAPjD,qDAWA,SAAUlB,IAAV,uEAEyB,OAFzB,kBAE+BY,aAAK,WACxB,OAAOC,MAAMlB,EAAQ,aAAamB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,aAH9D,OAKQ,OAHMU,EAFd,gBAKcT,YAAI,CAAE5F,KAAM,kBAAmB4D,QAASyC,EAASvC,OAL/D,8BAOQ,OAPR,mCAOc8B,YAAI,CAAE5F,KAAM,aAAc8B,MAAO,KAAE+D,UAPjD,qDAWA,SAAUjB,EAAa0B,GAAvB,uEAEqB,OAFrB,kBAE2Bf,aAAK,WACpB,OAAOC,MAAMlB,EAAQ,WAAWgC,EAAOrG,QAAQyB,GAAI,CAC/CqE,OAAQ,MACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUE,EAAOrG,WAC7BwF,MAAK,SAAAC,GAAG,OAAIA,EAAIC,aAV/B,OAYe,OAVD7B,EAFd,gBAYsC,MAAhBA,EAAK1B,OAZ3B,+CAcQ,OAdR,mCAccwD,YAAI,CAAE5F,KAAM,aAAc8B,MAAO,KAAE+D,UAdjD,qDAkBA,SAAUhB,EAAWhC,GAArB,uEAEyB,OAFzB,kBAE+B0C,aAAK,WACxB,OAAOC,MAAMlB,EAAQ,UAAUzB,EAAa5C,QAAS,CACjD8F,OAAQ,WACTN,MAAK,SAAAC,GAAG,OAAIA,EAAIC,aAL/B,OAOe,OALD7B,EAFd,gBAOsC,MAAhBA,EAAK1B,OAP3B,+CASQ,OATR,mCAScwD,YAAI,CAAE5F,KAAM,aAAc8B,MAAO,KAAE+D,UATjD,qDAaO,SAAUf,EAASQ,GAAnB,iEACH,OADG,SACGiB,YAAU,YAAahC,GAD1B,uCAIA,SAAUQ,KAAV,iEACH,OADG,SACGyB,YAAW,kBAAmBhC,GADjC,uCAIA,SAAUQ,KAAV,iEACH,OADG,SACGwB,YAAW,cAAe9B,GAD7B,uCAIA,SAAUO,KAAV,iEACH,OADG,SACGuB,YAAW,cAAe7B,GAD7B,uCAIA,SAAUO,GAAcI,GAAxB,iEACH,OADG,SACGkB,YAAW,iBAAiB5B,GAD/B,uCAGA,SAAUO,GAAUG,GAApB,iEACH,OADG,SACGkB,YAAW,cAAe/B,GAD7B,uCAIA,SAAUW,KAAV,iEACH,OADG,SACGoB,YAAW,cAAc3B,GAD5B,uCAIQ,SAAUQ,KAAV,iEACX,OADW,SACLoB,YAAI,CAAC3B,IAAcC,KAAiBI,KAAeH,KAAYC,KAAaC,KAAkBE,OADzF,uCC/Gf,IAAMsB,GAAiBC,cACjBC,GAAQC,aNuCY,WAAwC,IAAvCvH,EAAsC,uDAA9B2C,EAAcqE,EAAgB,uCAE7D,OAAQA,EAAOtG,MACX,IAAK,YACD,OAAO,2BAAKV,GAAZ,IAAmBW,QAASqG,EAAOrG,QAAS6B,MAAO,KACvD,IAAK,kBAEL,IAAK,cAEL,IAAK,cAEL,IAAK,cACD,OAAO,2BAAKxC,GAAZ,IAAmBW,QAASqG,EAAOrG,UACvC,IAAK,eACD,OAAO,2BAAKX,GAAZ,IAAmBe,MAAOiG,EAAOjG,QACrC,IAAK,qBACD,OAAO,2BAAKf,GAAZ,IAAmB+C,UAAWiE,EAAOR,aACzC,IAAK,iBACD,OAAO,2BAAKxG,GAAZ,IAAmBW,QAASqG,EAAOrG,UACvC,IAAK,kBACD,OAAO,2BAAKX,GAAZ,IAAmBF,OAAQkH,EAAOlH,SACtC,IAAK,kBACD,OAAO,2BAAKE,GAAZ,IAAmBsE,QAAS0C,EAAO1C,UACvC,IAAK,iBACD,OAAO,2BAAKtE,GAAZ,IAAmBsE,QAAS0C,EAAOrG,UACvC,IAAK,cACD,OAAO,2BAAKX,GAAZ,IAAmBF,OAAQkH,EAAOrG,UACtC,IAAK,aACD,OAAO,2BACAX,GADP,IAEIwH,SAAS,EACThF,MAAOwE,EAAOxE,QAGtB,QACI,OAAOxC,KMxEhByH,YAAgBL,GAAgBM,WAEnCN,GAAeO,IAAI5B,IAInB6B,IAASC,OAAO,kBAAC,IAAD,CAAUP,MAAOA,IAAO,kBAAC,EAAD,OAAoBQ,SAASC,eAAe,W","file":"static/js/main.0a9406b6.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector} from \"react-redux\";\r\nconst removeLink = { textDecoration: 'none', color: 'white' };\r\n\r\n\r\nconst Navbar = () => {\r\n\r\n    const bookData: any = useSelector((state) => {\r\n        return state\r\n    });\r\n    let myCart = bookData.myCart.length,\r\n        count = myCart > 0 ? `(${myCart})` : \"\";\r\n\r\n    return (\r\n        <nav className=\"nav-wrapper\">\r\n            <Link style={removeLink} to=\"/\" className=\"brand-logo\">Book Store</Link>\r\n            <ul className=\"right\">\r\n                <li><Link style={removeLink} to=\"/\">Home |</Link></li>\r\n                <li><Link style={removeLink} to=\"/myOrders\">My orders |</Link></li>\r\n                <li><Link style={removeLink} to=\"/myCart\">My Cart {count}</Link></li>\r\n            </ul>\r\n        </nav>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport {IbooksContent,IBooks} from '../reducers/rootReducer';\r\n\r\n\r\nexport const Home = () => {\r\n    const dispatch=useDispatch();\r\n    useEffect(()=>{\r\n        dispatch({type: \"GET_BOOKS\",payload:{start:0,end:20}});\r\n    },[]);\r\n\r\n    const bookData:IBooks = useSelector((state:IBooks)=>{\r\n       return state});\r\n       \r\n    let itemList = bookData.books.map((item:IbooksContent) => {\r\n        return (\r\n            <div className=\"card\" key={item.isbn}>\r\n                <img src={item.thumbnailUrl} alt=\"books\" />\r\n                <div>\r\n                    <h4> {item.title}</h4>\r\n                    <p className=\"wrapText\">{item.description.split(\".\")[0]}</p>\r\n                </div>\r\n                <Link to={\"checkout/\" + item.isbn}>\r\n                    <button className=\"primaryButton\">Buy Button</button>\r\n                </Link>\r\n            </div>\r\n        )\r\n    })\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"box\">\r\n                {itemList}                \r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { MouseEvent } from 'react';\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport {IbooksContent,IBooks} from '../reducers/rootReducer';\r\n\r\ninterface ICheckout {\r\n    match:any;\r\n}\r\n\r\nexport const Checkout:React.FC<ICheckout> = ({match})=>{\r\n    const dispatch = useDispatch();\r\n    const bookData:IBooks = useSelector((state:IBooks)=>{\r\n       return state});\r\n    const filteredBook = bookData.books.filter((item:IbooksContent)=>item.isbn==match.params.bookId);\r\n    const isBookAvail:number = filteredBook.length;\r\n    const  handleAddToCart=(e:MouseEvent)=>{\r\n        dispatch({type:\"ADD_TO_CART\", payload : {id:parseInt(filteredBook[0].isbn),price:filteredBook[0].price,title:filteredBook[0].title,author:filteredBook[0].author}});\r\n        dispatch({type:\"GET_MY_CART\"});\r\n    }\r\n\r\n    return (\r\n        bookData.error ? (\r\n            <div className='checkOut'>Please select a diffrent Book</div>\r\n        ):\r\n        isBookAvail ? (\r\n         <div className=\"checkOut\">\r\n            <img src={filteredBook[0].thumbnailUrl} alt=\"book\" />       \r\n            <div className=\"bookContent\">\r\n                <h3>{filteredBook[0].title}</h3>\r\n                <div>Price: $ {filteredBook[0].price}</div>                \r\n                <div>Author: {filteredBook[0].author}</div>\r\n                <div>Pages: {filteredBook[0].pages}</div>\r\n                <div>ISBN: {filteredBook[0].isbn}</div>\r\n                <div className=\"buttonFooter\">\r\n                    <button className=\"primaryButton\"  onClick={handleAddToCart}>Add to cart</button>\r\n                    <Link to=\"/myCart\">\r\n                    <button className=\"primaryButton\" onClick={handleAddToCart}>Buy now</button>\r\n                    </Link>\r\n                    \r\n                </div>\r\n            </div>       \r\n            <textarea>\r\n                {filteredBook[0].description}\r\n            </textarea> \r\n        </div>\r\n        )\r\n       : (\r\n           <div className='checkOut'>Please select a diffrent Book</div>\r\n       )\r\n       \r\n    )\r\n}","export interface IbooksContent {\r\n    isbn: string,\r\n    title: string,\r\n    thumbnailUrl: string,\r\n    author: string,\r\n    publisher: string,\r\n    orderedOn: string,\r\n    status: string,\r\n    price: number;\r\n    pages: number,\r\n    description: string,\r\n    endPage: number\r\n}\r\n\r\nexport interface ImyCart {\r\n    id: string,\r\n    price: number,\r\n    title: string,\r\n    author: string\r\n}\r\n\r\nexport interface IBooks {\r\n    books: [IbooksContent],\r\n    userBooks: [IbooksContent],\r\n    myCart: [ImyCart],\r\n    address: string,\r\n    error: string\r\n}\r\n\r\nexport const initialState = {\r\n    books: [{\r\n        isbn: \"\",\r\n        title: \"\",\r\n        thumbnailUrl: \"\",\r\n        author: \"\",\r\n        publisher: \"\",\r\n        orderedOn: \"\",\r\n        status: \"\",\r\n        price: 0,\r\n        pages: 0,\r\n        description: \"\"\r\n    }],\r\n    userBooks: [],\r\n    myCart: [{\r\n        id: \"\",\r\n        price: 0,\r\n        title: '',\r\n        author: \"\"\r\n    }],\r\n    error: ''\r\n};\r\n\r\nexport const fetchBooks = (state = initialState, action: any) => {\r\n\r\n    switch (action.type) {\r\n        case \"GET_BOOKS\":\r\n            return { ...state, payload: action.payload, error: \"\" };\r\n        case \"GET_USERS_BOOKS\":\r\n            return { ...state, payload: action.payload };\r\n        case \"GET_MY_CART\":\r\n            return { ...state, payload: action.payload };\r\n        case \"GET_ADDRESS\":\r\n            return { ...state, payload: action.payload };\r\n        case \"ADD_TO_CART\":\r\n            return { ...state, payload: action.payload };\r\n        case \"LOAD_SUCCESS\":\r\n            return { ...state, books: action.books };\r\n        case \"USERS_BOOK_SUCCESS\":\r\n            return { ...state, userBooks: action.usersBooks };\r\n        case \"UPDATE_ADDRESS\":\r\n            return { ...state, payload: action.payload };\r\n        case \"MY_CART_SUCCESS\":\r\n            return { ...state, myCart: action.myCart };\r\n        case \"ADDRESS_SUCCESS\":\r\n            return { ...state, address: action.address };\r\n        case \"ADDRESS_CHANGE\":\r\n            return { ...state, address: action.payload };\r\n        case \"DELETE_BOOK\":\r\n            return { ...state, myCart: action.payload };\r\n        case \"LOAD_ERROR\": {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            };\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {IbooksContent,initialState,IBooks} from '../reducers/rootReducer';\r\n\r\nexport const MyOrders = () => {\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch({ type: \"GET_USERS_BOOKS\"})\r\n    }, []);\r\n    let itemList: any = initialState.books[0];\r\n    const userData: IBooks = useSelector((state:IBooks) => {\r\n        return state\r\n    });\r\n    const Books = userData.userBooks;\r\n    if (Books && Books.length) {\r\n        itemList = Books.map((item: IbooksContent) => {\r\n            return (\r\n                <div className=\"myContainer\">\r\n                    <div className=\"myHeader\">\r\n                        <div> Order Placed on : {item.orderedOn}</div>\r\n                        <div> Status : {item.status}</div>\r\n                    </div>\r\n                    <div className=\"myMainbody\">\r\n                        <img src={item.thumbnailUrl} alt=\"book\" />\r\n                        <div className=\"bookContent\">\r\n                            <h3>{item.title}</h3>\r\n                            <div>Author: {item.author}</div>\r\n                            <div>Price: $ {item.price}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        });\r\n    } \r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"box\">\r\n                {itemList.length?itemList:(<h3>You have to purchase Books yet</h3>)}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ImyCart } from '../reducers/rootReducer';\r\n\r\n\r\nexport const MyCart = () => {\r\n    const [disabled, setDisabled] = useState(true);\r\n    const dispatch = useDispatch();\r\n    const userData: any = useSelector((state) => {\r\n        return state\r\n    });\r\n    const handleAdd = (e: any) => {\r\n        dispatch({ type: \"UPDATE_ADDRESS\", payload: { id: 1, data: userData.address } });\r\n        setDisabled(true);\r\n    }\r\n    useEffect(() => {\r\n        dispatch({ type: \"GET_MY_CART\" });\r\n        dispatch({ type: \"GET_ADDRESS\" });\r\n    }, []);\r\n\r\n    const handleChange = (e: any) => {\r\n        dispatch({ type: \"ADDRESS_CHANGE\", payload: e.target.value });\r\n    }\r\n\r\n    const deleteRecord = (e: any) => {\r\n        dispatch({ type: \"DELETE_BOOK\", payload: e.target.value });\r\n        dispatch({ type: \"GET_MY_CART\" });\r\n    }\r\n\r\n    const handleDisable = (e: any) => {\r\n        setDisabled(!disabled);\r\n    }\r\n    let totalPayable = {\r\n        itemCost: 0,\r\n        taxable: 0,\r\n        shipping: 0,\r\n        total: 0\r\n    }, trList: any = \"\";\r\n\r\n    if (userData.myCart && typeof userData.myCart === \"object\" && userData.myCart.length) {\r\n        if (userData.myCart.length == 1) {\r\n            let itemPrice = userData.myCart[0].price;\r\n            totalPayable = {\r\n                itemCost:  parseFloat(itemPrice),\r\n                taxable: ((itemPrice * 0.8) / 100),\r\n                shipping: ((itemPrice * 0.5) / 100),\r\n                total: 0\r\n            }\r\n            totalPayable.total = totalPayable.itemCost + totalPayable.taxable + totalPayable.shipping;\r\n        } else {\r\n            totalPayable = userData.myCart.reduce((prev: any, curr: any) => {\r\n                let itemCost = parseFloat(prev.price) + parseFloat(curr.price),\r\n                    taxable: number = (itemCost * 0.8) / 100,\r\n                    shipping: number = (itemCost * 0.5) / 100,\r\n                    total: number = itemCost + taxable + shipping;\r\n                return { itemCost: itemCost, taxable: taxable, shipping: shipping, total: total }\r\n            });\r\n        }\r\n        trList = userData.myCart.map((item: ImyCart) => {\r\n            return (\r\n                <tr key={item.id}>\r\n                    <td>{item.title}</td>\r\n                    <td>{item.price}</td>\r\n                    <td><button value={item.id} className=\"primaryButton\" onClick={deleteRecord}>-</button></td>\r\n                </tr>\r\n            )\r\n        });\r\n    }\r\n    return (\r\n        <div className=\"checkOut\">\r\n            <div className=\"flexRow\">\r\n                <div>Shipping Address</div> <br />\r\n                <textarea disabled={disabled} defaultValue=\"Please Enter Address\" value={userData.address} onChange={handleChange} />\r\n                <div className=\"buttonFooter\">\r\n                    <button className=\"primaryButton\" onClick={handleAdd}>Save Address</button>\r\n                    <button className=\"primaryButton\" onClick={handleDisable}>Edit Button</button>\r\n                </div>\r\n            </div>\r\n            <br/>\r\n            <div className=\"tableParent\">\r\n                <div> Shopping Bag </div><br />\r\n                <table>\r\n                    <tr>\r\n                        <th>Books</th>\r\n                        <th>Price</th>\r\n                        <th>Delete</th>\r\n                    </tr>\r\n                    {trList}\r\n                </table><br/>\r\n                <div> Payment Info </div>\r\n                <div>\r\n                    <div className=\"checkOut\"><div>Item Price: </div><div>{totalPayable.itemCost.toFixed(2)}</div></div>\r\n                    <div className=\"checkOut\"><div>Tax: </div><div>{totalPayable.taxable.toFixed(2)}</div></div>\r\n                    <div className=\"checkOut\"><div>Shipping: </div><div>{totalPayable.shipping.toFixed(2)}</div></div>\r\n                    <hr/>\r\n                    <div className=\"checkOut\"><div>Total: </div><div>{totalPayable.total.toFixed(2)}</div></div>\r\n                    <div className=\"buttonFooter\">\r\n                    <button className=\"primaryButton\" >Checkout</button>\r\n                    <button className=\"primaryButton\">Cancel</button>\r\n                </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch,RouteComponentProps } from 'react-router-dom';\nimport Navbar from './components/navBar';\nimport { Home } from './components/home';\nimport { Checkout } from './components/checkout';\nimport {MyOrders} from './components/myOrders';\nimport {MyCart} from './components/myCart';\n\nclass App extends  React.Component<{}, {}> {\n  render() {\n    return (\n      <BrowserRouter>\n        <header>\n          <Navbar />\n        </header>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/myOrders\" component={MyOrders} />\n          <Route path=\"/checkout/:bookId\" component={Checkout} />\n          <Route path=\"/myCart\" component={MyCart} />\n        </Switch>\n      </BrowserRouter>\n\n    );\n  }\n}\n\nexport default App;","export const  apiJson =\"https://my-json-server.typicode.com/prasannabalaji7/fakeBookServer/\";\r\n\r\n//export const  apiJson =\"http://localhost:3002/\";","import { put, takeEvery, takeLatest, call, all } from 'redux-saga/effects'\r\nimport {apiJson} from './constants/constants'\r\n\r\nfunction* fetchBooks(postObj:any) {\r\n    try {\r\n        const data = yield call(() => {\r\n            return fetch(`${apiJson}books?_start=${postObj.payload.start}&_end=${postObj.payload.end}`).then(res => res.json())\r\n        })\r\n        yield put({ type: \"LOAD_SUCCESS\", books: data });\r\n    } catch (e) {\r\n        yield put({ type: \"LOAD_ERROR\", error: e.message });\r\n    }\r\n}\r\n\r\nfunction* fetchUsersBooks() {\r\n    try {\r\n        const data = yield call(() => {\r\n            return fetch(apiJson+\"usersBooks\").then(res => res.json())\r\n        })\r\n        yield put({ type: \"USERS_BOOK_SUCCESS\", usersBooks: data });\r\n    } catch (e) {\r\n        yield put({ type: \"LOAD_ERROR\", error: e.message });\r\n    }\r\n}\r\n\r\nfunction* addToMyCart(postObj: any) {\r\n    try {\r\n        const data = yield call(() => {\r\n            return fetch(apiJson+\"myCart\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(postObj.payload)\r\n            }).then(res => res.json())\r\n        });\r\n        yield put({ type: \"MY_CART_SUCCESS\", myCart: data });\r\n    } catch (e) {\r\n        yield put({ type: \"LOAD_ERROR\", error: e.message });\r\n    }\r\n}\r\n\r\nfunction* fetchMyCart() {\r\n    try {\r\n        const data = yield call(() => {\r\n            return fetch(apiJson+\"myCart\").then(res => res.json())\r\n        });\r\n        yield put({ type: \"MY_CART_SUCCESS\", myCart: data });\r\n    } catch (e) {\r\n        yield put({ type: \"LOAD_ERROR\", error: e.message });\r\n    }\r\n}\r\n\r\nfunction* fetchAddress() {\r\n    try {\r\n        const response = yield call(() => {\r\n            return fetch(apiJson+\"address/1\").then(res => res.json())\r\n        });\r\n        yield put({ type: \"ADDRESS_SUCCESS\", address: response.data });\r\n    } catch (e) {\r\n        yield put({ type: \"LOAD_ERROR\", error: e.message });\r\n    }\r\n}\r\n\r\nfunction* updateAddres(action:any){\r\n    try {\r\n        const data = yield call(() => {\r\n            return fetch(apiJson+\"address/\"+action.payload.id, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(action.payload)\r\n            }).then(res => res.json())\r\n        });\r\n        return yield (data.status === 201)\r\n    } catch (e) {\r\n        yield put({ type: \"LOAD_ERROR\", error: e.message });\r\n    }\r\n}\r\n\r\nfunction* deleteBook(deleteRecord:any) {\r\n    try {\r\n        const data:any = yield call(() => {\r\n            return fetch(apiJson+\"myCart/\"+deleteRecord.payload, {\r\n                method: \"DELETE\"\r\n            }).then(res => res.json())\r\n        });\r\n        return yield (data.status === 201)\r\n    } catch (e) {\r\n        yield put({ type: \"LOAD_ERROR\", error: e.message });\r\n    }\r\n}\r\n\r\nexport function* getBooks(postObj:any) {\r\n    yield takeEvery(\"GET_BOOKS\", fetchBooks);\r\n}\r\n\r\nexport function* getUsersBooks() {\r\n    yield takeLatest(\"GET_USERS_BOOKS\", fetchUsersBooks);\r\n}\r\n\r\nexport function* getMyCart() {\r\n    yield takeLatest(\"GET_MY_CART\", fetchMyCart)\r\n}\r\n\r\nexport function* getAddress() {\r\n    yield takeLatest(\"GET_ADDRESS\", fetchAddress);\r\n}\r\n\r\nexport function* updateAddress(postObj: any){\r\n    yield takeLatest(\"UPDATE_ADDRESS\",updateAddres);\r\n}\r\nexport function* addToCart(postObj: any) {\r\n    yield takeLatest(\"ADD_TO_CART\", addToMyCart);\r\n}\r\n\r\nexport function* deleteBooks(){\r\n    yield takeLatest(\"DELETE_BOOK\",deleteBook);\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield all([getBooks({}), getUsersBooks(), addToCart({}), getMyCart(),getAddress(),updateAddress({}),deleteBooks()])\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport createSagaMiddleware from 'redux-saga';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport { logger } from 'redux-logger';\nimport {fetchBooks} from './reducers/rootReducer';\nimport rootSaga from './rootSaga';\n\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n   fetchBooks,\n   applyMiddleware(sagaMiddleware, logger),\n);\nsagaMiddleware.run(rootSaga);\n\n\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}